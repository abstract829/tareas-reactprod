{"version":3,"sources":["tareas/components/ListaTareas.tsx","tareas/components/CrearTarea/CrearTarea.tsx","tareas/routes/routes.ts","tareas/pages/TareasNoAsign.tsx","tareas/pages/TareasCompleted.tsx","tareas/pages/TareasPending.tsx","tareas/pages/AgregarTarea.tsx","tareas/routes/TareaNavigation.tsx","tareas/Tareas.tsx"],"names":["ListaTareas","tareas","useTareas","asignarTarea","eliminarTarea","useFiltroTareas","nextPage","prevPage","filteredTareas","map","t","Card","className","Body","Title","title","Text","desc","pending","completed","Button","onClick","id","CrearTarea","crearTarea","initialValues","onSubmit","validationSchema","Yup","min","required","max","htmlFor","type","name","component","as","routes","to","path","Component","useContext","TareaContext","useState","setFilteredTareas","useEffect","filter","TareaNavigation","element","replace","Tareas","AuthProvider","TareaProvider","MainLayout"],"mappings":"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","file":"static/js/4.3dffc207.chunk.js","sourcesContent":["import { Button, Card } from 'react-bootstrap';\r\nimport { Tarea } from '../interfaces/interfaces';\r\nimport './styles/styles.css'\r\nimport { useFiltroTareas } from '../hooks/useFiltroTareas';\r\nimport { useTareas } from '../hooks/useTareas';\r\n\r\ninterface props{\r\n    tareas: Tarea[]\r\n}\r\nexport const ListaTareas = ({tareas}:props) => {\r\n    const {asignarTarea, eliminarTarea} = useTareas()\r\n    const {nextPage,prevPage,filteredTareas} = useFiltroTareas(tareas)\r\n    return (\r\n        <div>\r\n            {\r\n                filteredTareas() ? \r\n                filteredTareas().map( t => (\r\n                        <Card key={t.id} className=\"tarea-item\">\r\n                            <Card.Body>\r\n                                <Card.Title>{t.title}</Card.Title>\r\n                                <Card.Text>{t.desc}</Card.Text>\r\n                                {\r\n                                    (!t.pending && !t.completed) ?\r\n                                    <Button onClick={() => asignarTarea(t.id)}>Tomar tarea</Button>\r\n                                    : ''\r\n                                }\r\n                                {\r\n                                    t.completed ?\r\n                                    <Button onClick={() => eliminarTarea(t.id)}>Eliminar tarea</Button>\r\n                                    : ''\r\n                                }\r\n                            </Card.Body>\r\n                        </Card>\r\n                ))\r\n                : <span>Loading...</span>\r\n            }\r\n            <div className=\"btn-pag\">\r\n                <Button onClick={prevPage}>Anterior</Button>\r\n                <Button onClick={nextPage}>Siguiente</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Form, Formik, Field, ErrorMessage } from 'formik'\r\nimport { Button } from 'react-bootstrap'\r\nimport * as Yup from 'yup'\r\nimport './styles.css'\r\nimport { useTareas } from '../../hooks/useTareas';\r\n\r\nexport const CrearTarea = () => {\r\n    const {crearTarea} = useTareas()\r\n    return (\r\n        <div className='container'>\r\n            <Formik\r\n                initialValues={{\r\n                    title:'',\r\n                    desc:'',\r\n                }}\r\n                onSubmit={ ({title,desc}) => crearTarea(title,desc)}\r\n                validationSchema={Yup.object({\r\n                    title: Yup.string()\r\n                            .min(5, 'Debe tener minimo 5 caracteres')\r\n                            .required('Campo obligatorio'),\r\n                    desc: Yup.string()\r\n                                .required('Campo obligatorio')\r\n                                .min(10, 'Debe tener como minimo 10 caracteres')\r\n                                .max(200, 'Debe tener como maximo 200 caracteres')\r\n                })}>\r\n                    {\r\n                        () => (\r\n                            <Form>\r\n                                <label htmlFor=\"title\">Titulo: </label>\r\n                                <Field type=\"text\" name=\"title\"/>\r\n                                <ErrorMessage name=\"title\" component=\"span\" className='error-msg'/>\r\n\r\n                                <label htmlFor=\"desc\">Descripcion:</label>\r\n                                <Field as=\"textarea\" type=\"email\" name=\"desc\"/>\r\n                                <ErrorMessage name=\"desc\" component=\"span\" className='error-msg'/>\r\n\r\n                                <Button type=\"submit\">Agregar</Button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n        </div>\r\n    )\r\n}\r\n","import { TareasCompleted } from '../pages/TareasCompleted';\r\nimport { TareasPending } from '../pages/TareasPending';\r\nimport { TareasNoAsign } from '../pages/TareasNoAsign';\r\nimport { AgregarTarea } from '../pages/AgregarTarea';\r\n\r\ninterface Route{\r\n    to: string,\r\n    path: string,\r\n    Component:() => JSX.Element,\r\n    name:string,\r\n}\r\n\r\nexport const routes :Route[] = [\r\n    {\r\n        to:'notasigned',\r\n        path:'/notasigned',\r\n        Component: TareasNoAsign,\r\n        name:'Tareas sin asignar'\r\n    },\r\n    {\r\n        to:'completed',\r\n        path:'/completed',\r\n        Component: TareasCompleted,\r\n        name:'Tareas completadas'\r\n    },\r\n    {\r\n        to:'pending',\r\n        path:'/pending',\r\n        Component: TareasPending,\r\n        name:'Tareas pendientes'\r\n    },\r\n    {\r\n        to:'crear',\r\n        path:'/crear',\r\n        Component: AgregarTarea,\r\n        name:'Agregar una tarea'\r\n    }\r\n]","import { useContext, useEffect, useState } from 'react'\r\nimport { ListaTareas } from '../components/ListaTareas'\r\nimport { TareaContext } from '../context/TareaContext'\r\nimport { Tarea } from '../interfaces/interfaces'\r\n\r\n\r\nexport const TareasNoAsign = () => {\r\n    const {tareas} = useContext(TareaContext)\r\n    const [filteredTareas, setFilteredTareas] = useState([] as Tarea[])\r\n    useEffect(() => {\r\n        if(tareas)\r\n        setFilteredTareas(tareas.filter(t => (!t.completed && !t.pending)))\r\n    }, [tareas])\r\n    return (\r\n        <div>\r\n            <ListaTareas tareas={filteredTareas}></ListaTareas>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport { ListaTareas } from '../components/ListaTareas'\r\nimport { TareaContext } from '../context/TareaContext'\r\nimport { Tarea } from '../interfaces/interfaces'\r\n\r\n\r\nexport const TareasCompleted = () => {\r\n    const {tareas} = useContext(TareaContext)\r\n    const [filteredTareas, setFilteredTareas] = useState([] as Tarea[])\r\n    useEffect(() => {\r\n        if(tareas)\r\n        setFilteredTareas(tareas.filter(t => t.completed))\r\n    }, [tareas])\r\n    return (\r\n        <div>\r\n            <ListaTareas tareas={filteredTareas}></ListaTareas>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext, useEffect, useState } from \"react\"\r\nimport { ListaTareas } from \"../components/ListaTareas\"\r\nimport { TareaContext } from \"../context/TareaContext\"\r\nimport { Tarea } from \"../interfaces/interfaces\"\r\n\r\nexport const TareasPending = () => {\r\n    const {tareas} = useContext(TareaContext)\r\n    const [filteredTareas, setFilteredTareas] = useState([] as Tarea[])\r\n    useEffect(() => {\r\n        if(tareas)\r\n        setFilteredTareas(tareas.filter(t => t.pending))\r\n    }, [tareas])\r\n    return (\r\n        <div>\r\n            <ListaTareas tareas={filteredTareas}></ListaTareas>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { CrearTarea } from '../components/CrearTarea/CrearTarea'\r\n\r\nexport const AgregarTarea = () => {\r\n    return (\r\n        <div>\r\n            <h2>Crea una nueva tarea</h2>\r\n            <CrearTarea></CrearTarea>\r\n        </div>\r\n    )\r\n}\r\n","import { Navigate, NavLink, Route, Routes } from \"react-router-dom\"\r\nimport { routes } from \"./routes\"\r\nimport './navstyle.css'\r\nexport const TareaNavigation = () => {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul className=\"ul-tarea_nav\">\r\n                    {\r\n                        routes.map( ({to,name}) => (\r\n                            <li key={to} className=\"li-tarea_nav\">\r\n                                <NavLink className=\"a-navlink\"\r\n                                        to={to}>{name}</NavLink>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </nav>\r\n            <Routes>\r\n                {\r\n                    routes.map( ({path,Component}) => (\r\n                        <Route key={path} path={path} element={<Component></Component>}/>\r\n                    ))\r\n                }\r\n                <Route path='/*' element={<Navigate to='notasigned' replace />} />\r\n            </Routes>                \r\n\r\n        </div>\r\n    )\r\n}\r\n","import { TareaProvider } from \"./context/TareaProvider\";\r\nimport { TareaNavigation } from './routes/TareaNavigation';\r\nimport { MainLayout } from \"../main-layout/MainLayout\";\r\nimport { AuthProvider } from \"../auth/context/AuthProvider\";\r\n\r\nexport const Tareas = () => {\r\n    return (\r\n        <AuthProvider>\r\n            <TareaProvider>\r\n                <MainLayout>\r\n                    <TareaNavigation></TareaNavigation>\r\n                </MainLayout>\r\n            </TareaProvider>\r\n        </AuthProvider>\r\n    )\r\n}\r\n\r\nexport default Tareas\r\n"],"sourceRoot":""}