{"version":3,"sources":["auth/context/useAuth.ts","auth/components/Login/Login.tsx","auth/components/Register/Register.tsx","auth/Auth.tsx"],"names":["useAuth","updateUser","useContext","AuthContext","navigate","useNavigate","crearUsuario","user","UsersApi","post","then","resp","data","ok","localStorage","setItem","token","console","log","logearUsuario","email","password","Login","className","to","initialValues","onSubmit","validationSchema","Yup","required","formik","htmlFor","type","name","component","Button","Register","values","min","max","Auth","useEffect","getItem","AuthProvider","path","element","replace"],"mappings":"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","file":"static/js/5.2d9229fc.chunk.js","sourcesContent":["import { UsersApi } from \"../../users/api/UsersApi\"\r\nimport { User } from '../../users/interfaces/interfaces';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from './AuthContext';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport const useAuth = () => {\r\n    const {updateUser} = useContext(AuthContext)\r\n    let navigate = useNavigate()\r\n    const crearUsuario = (user : User) => {\r\n        UsersApi.post('/crear',user).then(resp => resp.data)\r\n        .then(resp => {\r\n            if(resp.ok){\r\n                updateUser(resp.user)\r\n                localStorage.setItem('token', resp.token)\r\n                navigate('/tareas')\r\n            }else{\r\n                console.log('Error registro')\r\n            }\r\n        })\r\n    }\r\n    const logearUsuario = (email:string,password:string) => {\r\n        UsersApi.post('/logear', {email,password} ).then(resp => resp.data)\r\n        .then(resp => {\r\n            if(resp.ok){\r\n                updateUser(resp.user)\r\n                localStorage.setItem('token',resp.token)\r\n                navigate('/tareas')\r\n            }else{\r\n                console.log('Error login')\r\n            }\r\n        })\r\n    }\r\n    \r\n    return {\r\n        crearUsuario,logearUsuario\r\n    }\r\n}","import { ErrorMessage, Field, Formik, Form } from \"formik\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport * as Yup from 'yup'\r\nimport { useAuth } from \"../../context/useAuth\"\r\nimport './styles.css'\r\nexport const Login = () => {\r\n    const {logearUsuario} = useAuth()\r\n    return (\r\n        <div className=\"auth_container\">\r\n            <div className=\"navigate_auth\">\r\n                <NavLink to=\"/auth/login\">Login</NavLink>\r\n                <NavLink to=\"/auth/register\">Register</NavLink>\r\n            </div>\r\n            <Formik\r\n            initialValues={{\r\n                email: 'user1@email.com',\r\n                password: '123456',\r\n            }}\r\n            onSubmit={({email,password}) => logearUsuario(email,password)}\r\n            validationSchema={Yup.object({\r\n                email : Yup.string()\r\n                            .required('Debe ingresar el email')\r\n                            .email('Email invalido'),\r\n                password : Yup.string()\r\n                            .required('Debe ingresar la password')\r\n            })}>\r\n                {\r\n                    (formik) => (\r\n                        <Form>\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <Field type=\"email\" name=\"email\"/>\r\n                        <ErrorMessage name=\"email\" component=\"span\"/>\r\n\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <Field type=\"password\" name=\"password\"/>\r\n                        <ErrorMessage name=\"password\" component=\"span\"/>\r\n                        <Button type=\"submit\">Iniciar sesion</Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n","import { ErrorMessage, Field, Formik,Form } from \"formik\"\r\nimport { Button } from \"react-bootstrap\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport * as Yup from 'yup'\r\nimport '../Login/styles.css'\r\nimport { useAuth } from \"../../context/useAuth\"\r\n\r\n\r\nexport const Register = () => {\r\n    const {crearUsuario} = useAuth()\r\n    return (\r\n        <div className=\"auth_container\">\r\n            <div className=\"navigate_auth\">\r\n                <NavLink to=\"/auth/login\">Login</NavLink>\r\n                <NavLink to=\"/auth/register\">Register</NavLink>\r\n            </div>\r\n            <Formik\r\n            initialValues={{\r\n                name:'',\r\n                email: '',\r\n                password: '',\r\n            }}\r\n            onSubmit={(values) => crearUsuario(values)}\r\n            validationSchema={Yup.object({\r\n                name: Yup.string()\r\n                        .min(5, 'Debe tener minimo 5 caracteres')\r\n                        .required('Campo obligatorio')\r\n                        .max(50, 'No debe superar los 50 caracteres'),\r\n                email : Yup.string()\r\n                            .required('Debe ingresar el email')\r\n                            .email('Email invalido'),\r\n                password : Yup.string()\r\n                            .required('Debe ingresar la password')\r\n                            .min(6,'Debe tener minimo 6 caracteres')\r\n            })}>\r\n                {\r\n                    (formik) => (\r\n                        <Form>\r\n                        <label htmlFor=\"name\">Nombre:</label>\r\n                        <Field type=\"text\" name=\"name\"/>\r\n                        <ErrorMessage name=\"name\" component=\"span\"/>\r\n\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <Field type=\"email\" name=\"email\"/>\r\n                        <ErrorMessage name=\"email\" component=\"span\"/>\r\n\r\n                        <label htmlFor=\"password\">Password:</label>\r\n                        <Field type=\"password\" name=\"password\"/>\r\n                        <ErrorMessage name=\"password\" component=\"span\"/>\r\n\r\n                        <Button type=\"submit\">Registrarme</Button>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { Navigate, Route, Routes, useNavigate } from 'react-router-dom';\r\nimport { Login } from \"./components/Login/Login\"\r\nimport './components/Login/styles.css'\r\nimport { Register } from \"./components/Register/Register\"\r\nimport { AuthProvider } from \"./context/AuthProvider\"\r\n\r\nexport const Auth = () => {\r\n    let navigate = useNavigate()\r\n    let token\r\n    useEffect(() => {\r\n        token = localStorage.getItem('token')\r\n        console.log(token)\r\n        if(token){\r\n            navigate('/tareas')\r\n        }\r\n    }, [])\r\n    return (\r\n        <AuthProvider>\r\n            <div className=\"auth\">\r\n                {\r\n                    \r\n                    <Routes>\r\n                        <Route path=\"/register\" element={<Register></Register>}/>\r\n                        <Route path=\"/login\" element={<Login></Login>}/>\r\n                        <Route path=\"/*\" element={<Navigate to=\"login\" replace/>}/>\r\n                    </Routes>\r\n                }\r\n            </div>\r\n        </AuthProvider>\r\n    )\r\n}\r\nexport default Auth"],"sourceRoot":""}